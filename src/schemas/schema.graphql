scalar Date


type ResultUsers implements Result{
    "estado de la operacion"
    status: Boolean!
    "mensage de la operacion para dar feedback"
    message: String!
    "LISTA DE USUARIOS REGISTRADA EN LA BASE DE DATOS (CLIENTES/ADMIN)"
    users: [User!]!
}

type ResultLogin implements Result{
    status: Boolean!
    message: String!
    "Info del token del usuario logeado"
    token: String
}
"Definiciones de los tipos de raiz"
type Query {
    "LISTA DE USUARIOS REGISTRADA EN LA BASE DE DATOS (CLIENTES/ADMIN)"
    users: ResultUsers

    "INICIAR SESION"
    login(email: String!, password: String!): ResultLogin

    "AUTHENICAR CON TOKEN"
    me: ResultUser
}




type Mutation {
    register(user: UserInput!): ResultUser
}

type ResultUser implements Result{
    status: Boolean!
    message: String!
    user: User
}



"Interface para especificar las propiedades obligatorias en la respuestas"
interface Result{
    "estado de la operacion"
    status: Boolean!
    "mensage de la operacion para dar feedback"
    message: String!
}




type User{
    _id: ID!
    name: String!
    lastname: String!
    email: String!
    password: String!
    birthday: String!
    role: Role!
    registerDate: Date!
    updatedAt: Date!
}

"Input para a√±adir los datos del usuario en el registro"
input UserInput{
    _id: ID
    name: String!
    lastname: String!
    email: String!
    password: String!
    birthday: String!
    role: Role=CLIENT
}

enum Role {
    CLIENT
    ADMIN
}

